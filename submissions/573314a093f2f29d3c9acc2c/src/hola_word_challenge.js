var fs = require("fs");

var dict = {};

// Synchronous read
var data = fs.readFileSync('words.txt').toString().split("\n");

//convert dictionary file to a representation that helps this problem
for (var i = 0; i < data.length; i++) {
	var w = data[i].toLowerCase();

	var prev = "";

	for (var j = 0; j < w.length; j++) {
		if (!dict.hasOwnProperty(w[j])) {
			dict[w[j]] = {'end' : {}, 'length' : {}};
		}

		if (j > 0) {
			if (!dict[prev].hasOwnProperty(w[j])) {
				dict[prev][w[j]] = {};
			}
		}

		if (j + 1 >= w.length) {
			dict[w[j]]['end'][w[0]] = {};
			dict[w[j]]['length'][w.length] = {};
		}

		prev = w[j];
	}
}

/**
for (var property in dict) {
    if (dict.hasOwnProperty(property)) {
		console.log(dict[property]['length']);
        console.log(property + ' - ' + Object.keys(dict[property]).length + ' - ' + Object.keys(dict[property]['end']).length + ' - ' +Object.keys(dict[property]['length']).length);
    }
}
**/

//Used to print out the dictionary rep generated by the code above
//console.log(JSON.stringify(dict));



// ==========================================
/**
var d = {};

exports.test = function (w) {
	w = w.toLowerCase();//convert word to lower case
	for (var i = 1; i < w.length; i++) {
		//if prev character has current character in set
		if (!d[w[i-1]].hasOwnProperty(w[i])) {
			return false;
		}
		//if I was able to navigate the entire word in our rep
		//check if the last character is a valid for the corresponding beginning
		//and the length is valid
		if (i + 1 >= w.length) {
			if (d['end'].hasOwnProperty(w[i]) && d['length'].hasOwnProperty(w.length)) {
				return true;
			} else {
				return false;
			}
		}
	}
};

exports.init = function (dd) {
	d = JSON.parse(dd);
};
**/


// ==================================================

// *************** Section to test classifier
var tester = require("./solution.js");

var testCase = fs.readFileSync('864391069.json').toString();
testCase = JSON.parse(testCase);

tester.init(JSON.stringify(dict));

ans = 0;
for (var property in testCase) {
    if (testCase.hasOwnProperty(property)) {
		var res = tester.test(property);
		console.log(property + ' - ' + testCase[property] + ' - ' + res);

		if (res == testCase[property]) {
			++ans;
		}
	}
}

console.log(ans);
